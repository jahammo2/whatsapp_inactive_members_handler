defmodule WhatsappInactiveMembersHandler.PhoneNumber.PhoneNumbersTest do
  use WhatsappInactiveMembersHandler.DataCase, async: true

  alias WhatsappInactiveMembersHandler.PhoneNumber.PhoneNumbers

  describe "find_inactive_contacts/1" do
    @params %{
      "messagesFile" => %{
        "io" =>
          "data:text/plain;base64,MS4gRm9vCgowMS8wNC8yMSAxMTowNCBwLsKgbS4gLSBMb3MgbWVuc2FqZXMgeSBsYXMgbGxhbWFkYXMgZXN0w6FuIGNpZnJhZG9zIGRlIGV4dHJlbW8gYSBleHRyZW1vLiBOYWRpZSBmdWVyYSBkZSBlc3RlIGNoYXQsIG5pIHNpcXVpZXJhIFdoYXRzQXBwLCBwdWVkZSBsZWVybG9zIG5pIGVzY3VjaGFybG9zLiBUb2NhIHBhcmEgb2J0ZW5lciBtw6FzIGluZm9ybWFjacOzbi4KCjEyLzA0LzIxIDEyOjAzIHAuwqBtLiAtIFRlc3QgVXNlciAyOiAydjIgc2lnbi11cCB0b2RheSBhdCA0cG0sIENvY28gQmVhY2guICBXZSBjdXJyZW50bHkgaGF2ZSA0IHBsYXllcnMgc28gd2UncmUgbG9va2luZyBmb3IgYWJvdXQgNC02IG1vcmUgYWN0aXZlIHBsYXllcnMgZm9yIHRoaXMgZ2FtZToKCjA2LzA1LzIxIDEwOjQ3IHAuwqBtLiAtIFRlc3QgVXNlciA0OiBFc3BlcmFuZG8gZXN0ZSBtZW5zYWplCgoxNi8wOC8yMSA1OjI0IHAuwqBtLiAtICsxICgyMDQpIDU1NS02MzQ0OiBUaGFua3MhIEpvaW5lZCB0aGF0IHRvbwoKMS4gTWlrZQoyLiBUaW0KMy4gSm9zaHVhCjQuIEFicmlsCjUuIERhbmllbCArMgoxMC8xMi8yMSAxMDoyNCBhLsKgbS4gLSArMSAoNTU1KSAyMjUtOTg1MzogQmVhY2gg8J+PkCBEZWMgMTJ0aC4gMjowMHBtCgoxLiBBbGUKMi4gQ2hyaXN0aWFuCjMuIEtsYXVkaWEKNC4gU3Rlbwo1LiBDcmFpZwo2LiBMaW51cwo3LiBUb255CjAxLzAyLzIyIDM6MzUgcC7CoG0uIC0gKzMxIDYgNTU1ODg4MTI6IFNlZSB5b3UgdGhlcmUgYXJvdW5kIDQ6MTAKMDEvMDIvMjIgMzo0NSBwLsKgbS4gLSArMzMgNiA1NSA1NSAwOCA1ODogT24gbXkgd2F5CjAxLzAyLzIyIDM6NTYgcC7CoG0uIC0gKzM0IDU1NSAxNSAyNCA2NjogQ29vbAowMS8wMi8yMiAzOjU3IHAuwqBtLiAtICszNiAyMCA1NTUgMDQ4MzogSnVzdCBnb3QgdGhlIG5ldCBiZSB0aGVyZSBzb29uCjAxLzAyLzIyIDQ6MTcgcC7CoG0uIC0gKzM2IDIwIDU1NSAwNDgzOiA8TXVsdGltZWRpYSBvbWl0aWRvPgowMS8wMi8yMiA0OjE3IHAuwqBtLiAtICszNiAyMCA1NTUgMDQ4MzogV2hlcmUgYXJlIHlvdSBhbGw/PwowMS8wMi8yMiA0OjIyIHAuwqBtLiAtICszNzUgMjkgNTU1LTY1LTQ2OiA1IG1pbgowMS8wMi8yMiA1OjA1IHAuwqBtLiAtIOKAjiszOSAzNDkgNTU1IDYzMzUgc2UgdW5pw7MgdXNhbmRvIGVsIGVubGFjZSBkZSBpbnZpdGFjacOzbiBkZSBlc3RlIGdydXBvCjAxLzAyLzIyIDU6MjYgcC7CoG0uIC0g4oCOKzQyMCA3MzkgNTU1IDc1OSBzYWxpw7MgZGVsIGdydXBvCjAxLzAyLzIyIDc6MjUgcC7CoG0uIC0gKzQ0IDU1NTUgNzcxMTA3OiBHcmVhdCBnYW1lIHRvZGF5IGd1eXMhIFRoYW5rIHlvdSDwn5mPCjAxLzAyLzIyIDc6MjUgcC7CoG0uIC0gKzQ0IDU1NTUgNzcxMTA3OiBZZWFoIGl0IHdhcyBmdW4KMDEvMDIvMjIgNzoyNiBwLsKgbS4gLSArNyA5MTYgNTU1LTMzLTMzOiBmb28gYmFyCjAxLzAyLzIyIDc6MzIgcC7CoG0uIC0gKzQ0IDU1NTUgMTE3NzMzOiA8TXVsdGltZWRpYSBvbWl0aWRvPgowMS8wMi8yMiA3OjMyIHAuwqBtLiAtIFRlc3QgVXNlciAxOiDwn5iO8J+RjPCfj7zwn4+QCjAxLzAyLzIyIDc6MzIgcC7CoG0uIC0gKzQ4IDU1NSAzNjAgNDIyOiBUaGFuayB5b3UgYWxsIGd1eXMhCjAyLzAyLzIyIDY6MTEgYS7CoG0uIC0g4oCOKzQ5IDU1NSAyOTA2NzU4MSBzYWxpw7MgZGVsIGdydXBvCjAyLzAyLzIyIDk6NDMgcC7CoG0uIC0g4oCOKzUwNSA1NTU1IDQyOTQgdXNlciBzYWxpw7MgZGVsIGdydXBvCjAyLzAyLzIyIDEwOjM3IHAuwqBtLiAtIOKAjis1MiAxIDMzIDU1NTUgMTk2MCBzZSB1bmnDsyB1c2FuZG8gZWwgZW5sYWNlIGRlIGludml0YWNpw7NuIGRlIGVzdGUgZ3J1cG8KMDMvMDIvMjIgMTI6MzAgcC7CoG0uIC0g4oCOKzUyIDMzIDU1NTUgNzIzNiBzYWxpw7MgZGVsIGdydXBvCg=="
      },
      "contactsFile" => %{
        "io" =>
          "data:text/plain;base64,ewogICAgIlZvbGxleWJhbGwgUERDIjogWwogICAgICAgIHsKICAgICAgICAgICAgIk5hbWUiOiAiVGVzdCBVc2VyIDEiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzQ0IDU1NTUgMzM5OTcxIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiVW5pdGVkIEtpbmdkb20iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgVXNlciAyIiwKICAgICAgICAgICAgIlBob25lIjogIisxIDU1NSA1MTUgMTUxNyIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlVuaXRlZCBTdGF0ZXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgVXNlciAzIiwKICAgICAgICAgICAgIlBob25lIjogIisxIDU1NSAyNzMgMDIyOCIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlVuaXRlZCBTdGF0ZXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgVXNlciA0IiwKICAgICAgICAgICAgIlBob25lIjogIis1MiA1NTUgMTk2IDI1NTYiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJNZXhpY28iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgVXNlciA1IiwKICAgICAgICAgICAgIlBob25lIjogIis0NCA1NTUgODIwOTQwIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiVW5pdGVkIEtpbmdkb20iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIisxICg1NTUpIDIzMi02MzQ0IiwKICAgICAgICAgICAgIlBob25lIjogIisxIDU1NSAyMzIgNjM0NCIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIkNhbmFkYSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIk5hbWUiOiAiKzEgKDU1NSkgNjc3LTc0MjEiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzEgNTU1IDY3NyA3NDIxIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiVW5pdGVkIFN0YXRlcyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIk5hbWUiOiAiVGVzdCBVUyB1c2VyIiwKICAgICAgICAgICAgIlBob25lIjogIisxIDU1NSAyMjUgOTg1MyIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlVuaXRlZCBTdGF0ZXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIiszMSA2IDU1NTg4ODEyIiwKICAgICAgICAgICAgIlBob25lIjogIiszMSA2IDU1NTg4ODEyIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiTmV0aGVybGFuZHMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgRnJhbmNlIFVzZXIiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzMzIDYgNTUgNTUgMDggNTgiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJGcmFuY2UiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIiszNCA1NTUgMTUgMjQgNjYiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzM0IDU1NSAxNSAyNCA2NiIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlNwYWluIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICJUZXN0IEh1bmdhcnkgVXNlciIsCiAgICAgICAgICAgICJQaG9uZSI6ICIrMzYgMjAgNTU1IDA0ODMiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJIdW5nYXJ5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICJUZXN0IEJlbGFydXMgVXNlciIsCiAgICAgICAgICAgICJQaG9uZSI6ICIrMzc1IDI5IDU1NSA2NSA0NiIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIkJlbGFydXMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIiszOSAzNDkgNTU1IDYzMzUiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzM5IDM0OSA1NTUgNjMzNSIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIkl0YWx5IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICIrNDIwIDczOSA1NTUgNzU5IiwKICAgICAgICAgICAgIlBob25lIjogIis0MjAgNzM5IDU1NSA3NTkiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJDemVjaCBSZXB1YmxpYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIk5hbWUiOiAiKzQ0IDU1NTUgNzcxMTA3IiwKICAgICAgICAgICAgIlBob25lIjogIis0NCA1NTU1IDc3MTEwNyIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlVuaXRlZCBLaW5nZG9tIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICJUZXN0IFVLIHVzZXIiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzQ0IDU1NTUgMTE3NzMzIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiVW5pdGVkIEtpbmdkb20iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgUG9sYW5kIHVzZXIiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzQ4IDU1NSAzNjAgNDIyIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiUG9sYW5kIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICIrNDkgNTU1IDI5MDY3NTgxIiwKICAgICAgICAgICAgIlBob25lIjogIis0OSA1NTUgMjkwNjc1ODEiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJHZXJtYW55IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICJUZXN0IE5pY2FyYWd1YSB1c2VyIiwKICAgICAgICAgICAgIlBob25lIjogIis1MDUgNTU1NSA0Mjk0IiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiTmljYXJhZ3VhIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICIrNTIgMSAzMyA1NTU1IDE5NjAiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzUyIDMzIDU1NTUgMTk2MCIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIk1leGljbyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIk5hbWUiOiAiVGVzdCBNZXhpY28gdXNlciIsCiAgICAgICAgICAgICJQaG9uZSI6ICIrNTIgMzMgNTU1NSA3MjM2IiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiTWV4aWNvIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICJUZXN0IENoaWxlIFVzZXIiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzU2IDkgNTU1NSA2MjAzIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiQ2hpbGUiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgQ29sb21iaWEgVXNlciIsCiAgICAgICAgICAgICJQaG9uZSI6ICIrNTcgNTU1IDc2NDEwMjEiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJDb2xvbWJpYSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIk5hbWUiOiAiKzcgOTExIDU1NS03Mi01MCIsCiAgICAgICAgICAgICJQaG9uZSI6ICIrNyA5MTEgNTU1IDcyIDUwIiwKICAgICAgICAgICAgIkNvdW50cnkiOiAiUnVzc2lhbiBGZWRlcmF0aW9uIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICIrNyA5MTYgNTU1LTMzLTMzIiwKICAgICAgICAgICAgIlBob25lIjogIis3IDkxNiA1NTUgMzMgMzMiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJSdXNzaWFuIEZlZGVyYXRpb24iCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgUnVzc2lhIFVzZXIiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzcgOTE2IDU1NSA4NyA3MiIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlJ1c3NpYW4gRmVkZXJhdGlvbiIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgIk5hbWUiOiAiKzkwIDUzMyA1NTUgMjYgOTEiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzkwIDUzMyA1NTUgMjYgOTEiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJUdXJrZXkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIlRlc3QgVUFCIFVzZXIiLAogICAgICAgICAgICAiUGhvbmUiOiAiKzk3MSA1OCA1NTUgMzI1NCIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlVuaXRlZCBBcmFiIEVtaXJhdGVzIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiTmFtZSI6ICJUZXN0IElzcmFlbCBVc2VyIiwKICAgICAgICAgICAgIlBob25lIjogIis5NzIgNTAgNTU1IDY1ODgiLAogICAgICAgICAgICAiQ291bnRyeSI6ICJJc3JhZWwiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJOYW1lIjogIkpvcmRhbiBIYW1tb25kIiwKICAgICAgICAgICAgIlBob25lIjogIisxIDU1NSA1NTUgNTU1NSIsCiAgICAgICAgICAgICJDb3VudHJ5IjogIlVuaXRlZCBTdGF0ZXMiCiAgICAgICAgfQogICAgXQp9Cg=="
      },
      "startingUnsavedContact" => "+1 (555) 232-6344",
      "startDate" => nil
    }

    test "it returns list of contacts that have not ever been active if no date is passed" do
      inactive_contacts = [
        "Test User 3",
        "Test User 5",
        "+1 (555) 232-6344",
        "+1 (555) 677-7421",
        "+375 29 555 65 46",
        "+52 33 5555 1960",
        "+56 9 5555 6203",
        "+57 555 7641021",
        "+7 911 555-72-50",
        "+7 916 555-87-72",
        "+90 533 555 26 91",
        "+971 58 555 3254",
        "+972 50-555-6588"
      ]

      assert ^inactive_contacts = PhoneNumbers.find_inactive_contacts(@params)
    end

    test "it returns list of contacts that have not been active since a date if a start date is passed" do
      params =
        @params
        |> Map.put("startDate", "10/10/21")

      inactive_contacts = [
        "Test User 2",
        "Test User 3",
        "Test User 4",
        "Test User 5",
        "+1 (555) 232-6344",
        "+1 (555) 677-7421",
        "+375 29 555 65 46",
        "+52 33 5555 1960",
        "+56 9 5555 6203",
        "+57 555 7641021",
        "+7 911 555-72-50",
        "+7 916 555-87-72",
        "+90 533 555 26 91",
        "+971 58 555 3254",
        "+972 50-555-6588"
      ]

      assert ^inactive_contacts = PhoneNumbers.find_inactive_contacts(params)
    end

    test "it returns list of contacts that have not been active since a date if a later start date is passed" do
      params =
        @params
        |> Map.put("startDate", "01/02/22")

      inactive_contacts = [
        "Test User 2",
        "Test User 3",
        "Test User 4",
        "Test User 5",
        "+1 (555) 232-6344",
        "+1 (555) 677-7421",
        "+1 (555) 225-9853",
        "+375 29 555 65 46",
        "+52 33 5555 1960",
        "+56 9 5555 6203",
        "+57 555 7641021",
        "+7 911 555-72-50",
        "+7 916 555-87-72",
        "+90 533 555 26 91",
        "+971 58 555 3254",
        "+972 50-555-6588"
      ]

      assert ^inactive_contacts = PhoneNumbers.find_inactive_contacts(params)
    end
  end
end
